openapi: 3.0.0
info:
  description: |
    This is an API Documentation for 
    [Stand With Dorayaki](http://swagger.io) website.
  version: 1.0.1
  title: Stand with Dorayaki
  contact:
    email: kadeksuryam@gmail.com
tags:
  - name: dorayaki
    description: Operations about dorayaki
  
  - name: toko dorayaki
    description: Operations about toko dorayaki
    
  - name: stok dorayaki
    description: Operations about stok dorayaki

paths:
  /dorayakis:
    get:
      tags:
        - dorayaki
      summary: Get a list of dorayaki
      operationId: readAllDorayaki
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dorayaki'
    
    post:
      tags:
        - dorayaki
      summary: Create a dorayaki
      operationId: createDorayaki
      requestBody:
        $ref: '#/components/requestBodies/Dorayaki'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                 $ref: '#/components/schemas/Dorayaki'
        '400':
          description: bad request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                 
  '/dorayakis/{dorayakiId}':
    get:
      tags:
        - dorayaki
      summary: Get a dorayaki by ID
      operationId: readOneDorayaki
      parameters:
        - name: dorayakiId
          in: path
          description: ID of dorayaki that needs to be fetched
          required: true
          schema:
            type: string
      responses:
        '200':
          description: sucessful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dorayaki'
        '404':
          description: dorayaki with the corresponding ID not found
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
        
        '400':
          description: bad request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
    put:
      tags:
        - dorayaki
      summary: Update a dorayaki by ID
      operationId: updateOneDorayaki
      parameters:
        - name: dorayakiId
          in: path
          description: ID of dorayaki that needs to be updated
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                rasa:
                  type: string
                deskripsi:
                  type: string
                gambar:
                  type: string
                  format: binary
            encoding:
              gambar:
                contentType: image/png
        description: Updated dorayaki object
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  gambar:
                    type: string
                  _id:
                    type: string
                  rasa:
                    type: string
                  deskripsi:
                    type: string
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
                  __v:
                    type: integer
                    format: int64
                  
        '404':
          description: dorayaki with the corresponding ID not found
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
        '400':
          description: bad request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
          
    delete:
      tags:
        - dorayaki
      summary: Delete a dorayaki by ID
      operationId: deleteDorayaki
      parameters:
        - name: dorayakiId
          in: path
          description: ID of dorayaki that needs to be fetched
          required: true
          schema:
            type: string
      responses:
        '200':
          description: dorayaki has succefully deleted
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: string   
        '404':
          description: dorayaki with the corresponding ID not found
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
        '400':
          description: bad request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
      
  '/toko-dorayakis':
    get:
      tags:
        - toko dorayaki
      summary: get all toko dorayaki
      operationId: readAllTokoDorayaki
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TokoDorayaki'
  
    post:
      description: 
        Please follow this [Indonesia Daerah API](https://farizdotid.com/blog/dokumentasi-api-daerah-indonesia/) for provinsi, kabupaten, and kecamatan field
      tags:
        - toko dorayaki
      summary: create a toko dorayaki
      operationId: createTokoDorayaki
      requestBody:
        $ref: '#/components/requestBodies/TokoDorayaki'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                 $ref: '#/components/schemas/TokoDorayaki'
        '400':
          description: bad request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
  
  '/toko-dorayakis/{tokoDorayakiId}':
    get:
      tags:
        - toko dorayaki
      summary: get a toko dorayaki by id
      operationId: readTokoDorayaki
      parameters:
        - name: tokoDorayakiId
          in: path
          description: ID of toko dorayaki that needs to be fetched
          required: true
          schema:
            type: string
            
      responses:
        '200':
          description: sucessful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokoDorayaki'
        '404':
          description: toko dorayaki with the corresponding ID not found
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string        
        '400':
          description: bad request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
    put:
      description: 
        Please follow this [Indonesia Daerah API](https://farizdotid.com/blog/dokumentasi-api-daerah-indonesia/) for provinsi, kabupaten, and kecamatan field
      tags:
        - toko dorayaki
      summary: Update a toko dorayaki by ID
      operationId: updateOneTokoDorayaki
      parameters:
        - name: tokoDorayakiId
          in: path
          description: ID of toko dorayaki that needs to be updated
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                nama:
                  type: string
                jalan:
                  type: string
                kabupaten:
                  type: string
                kecamatan:
                  type: string
                provinsi:
                  type: string
                gambar:
                  type: string
                  format: binary
            encoding:
              gambar:
                contentType: image/png
        required: true
        description: Updated dorayaki object
      responses:
        '200':
          description: sucessful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokoDorayaki'
        '404':
          description: toko dorayaki with the corresponding ID not found
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
        '400':
          description: bad request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
    delete:
      tags:
        - toko dorayaki
      summary: Delete a toko dorayaki by ID
      operationId: deleteTokoDorayaki
      parameters:
        - name: tokoDorayakiId
          in: path
          description: ID of toko dorayaki that needs to be fetched
          required: true
          schema:
            type: string
      responses:
        '200':
          description: toko dorayaki has succefully deleted
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: string          
        '404':
          description: toko dorayaki with the corresponding ID not found
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
        '400':
          description: bad request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
          
  '/stok-dorayakis':
    get:
      tags:
        - stok dorayaki
      summary: Get stok dorayakis by tokoID or dorayakiID
      operationId: getStokDorayaki
      parameters:
        - name: dorayakiId
          in: query
          description: ID of dorayaki that the stok needs to be fetched
          schema:
            type: string
        - name: tokoDorayakiId
          in: query
          description: ID of toko dorayaki that the stok needs to be fetched
          schema:
            type: string
      responses:
        '200':
          description: sucessful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StokDorayaki'
  
  '/stok-dorayakis/{stokId}':
    put:
      tags:
        - stok dorayaki
      summary: Update a stok dorayaki
      operationId: updateStokDorayaki
      description: stok field should be a positive integer number
      parameters:
        - name: stokId
          in: path
          description: ID of stok dorayaki that needs to be updated
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                stok:
                  type: number
        required: true
      responses:
        '200':
          description: sucessful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StokDorayaki'
        '404':
          description: stok dorayaki with the corresponding ID not found
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string        
        '400':
          description: bad request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
    
servers:
  - url: http://stand-with-dorayaki.eastus.cloudapp.azure.com/api/v1
    description: Production server
  - url: http://localhost/api/v1/
    description: Local server
  
  
components:
  requestBodies:
    Dorayaki:
      content:
        multipart/form-data:
          schema:
            type: object
            required:
              - rasa
            properties:
              rasa:
                type: string
              deskripsi:
                type: string
              gambar:
                type: string
                format: binary
          encoding:
            gambar:
              contentType: image/png
      required: true
      
    TokoDorayaki:
      content:
        multipart/form-data:
          schema:
            type: object
            required:
              - nama
              - jalan
              - kabupaten
              - kecamatan
              - provinsi
            properties:
              nama:
                type: string
              jalan:
                type: string
              kabupaten:
                type: string
              kecamatan:
                type: string
              provinsi:
                type: string
              gambar:
                type: string
                format: binary
          encoding:
            gambar:
              contentType: image/png
      required: true
      
  schemas:
    Dorayaki:
      type: object
      required:
      - rasa
      properties:
        gambar:
          type: string
        _id:
          type: string
        rasa:
          type: string
        deskripsi:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        __v:
          type: integer
          format: int64
    
    TokoDorayaki:
      type: object
      required:
        - nama
        - jalan
        - kabupaten
        - kecamatan
        - provinsi
      properties:
        _id:
          type: string
        nama:
          type: string
        jalan:
          type: string
        kabupaten:
          type: string
        kecamatan:
          type: string
        provinsi:
          type: string
        gambar:
          type: string 
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        __v:
          type: integer
          format: int64
          
    StokDorayaki:
      type: object
      required:
      - dorayaki
      - tokoDorayaki
      properties:
        _id:
          type: string
        dorayaki:
          $ref: '#/components/schemas/Dorayaki'
        tokoDorayaki:
          type: string
        stok:
          type: number
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        __v:
          type: integer
          format: int64